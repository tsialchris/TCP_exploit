#import the scapy library
from scapy.all import  *
import time

def capture_packet():	#function used to capture a single packet and return it, without storing it
			#iface->indicates our interface, prn->sends the packet to capture_packet,
			#will call this function multiple times, hence count = 1
			#optionally, filter = 'host 192.168.1.62'
	sniffed_packet = sniff(iface = 'wlan0', filter = 'tcp', count = 1)
	return sniffed_packet[0]	#get the first packet in the list (since we only capture 1 packet)

#packet_one = capture_packet()	#debugging
#packet_one.show()		#debugging

while True:		#sniff as many packets as the user defines, if the user defines a negative number,
			#sniff to infinity!
			#this is the input of the user
			#n = input('How many packets to sniff?\n (If negative: sniff to infinity!)\n')	
	packet1 = capture_packet()
	
	print(packet1[Ether].src)
	print(packet1[Ether].dst)
	
	print(packet1[IP].src)
	print(packet1[IP].dst)
	
	print(packet1[TCP].ack)
	print(packet1[TCP].seq)
	
	#send = sendp(packet1)
	
	#packet1.show()	#debugging
